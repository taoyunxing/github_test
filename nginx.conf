
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    proxy_cache_path  /usr/local/nginx/cache1  levels=1:2 keys_zone=cache1:100m inactive=1d max_size=2g use_temp_path=off;

    req_status_zone server_name $server_name     256k;
    req_status_zone server_addr $server_addr     256k;
    req_status_zone server_url  $server_name$uri 256k;

    req_status server_name  server_addr  server_url;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location ~* /3145/ {
            empty_gif;
        }

        location = /ngx_req_status {
            req_status_show on;
        }

        add_header X-Cache $upstream_cache_status;

        location ^~ /static/ {
            proxy_cache  cache1;
            proxy_cache_key  $host$uri$is_args$args;
            proxy_cache_valid 200 304 301 302 10m;
            proxy_cache_methods GET;
            proxy_cache_min_uses 3;
            proxy_cache_bypass $cookie_nocache $arg_nocache $arg_comment;

            proxy_pass  http://127.0.0.1:18080;

            expires 30d;
            access_log  logs/cache.log main; 
        }

        location ~ /purge(/.*) {
            proxy_cache_purge  cache1 $host$1$is_args$args;
            allow              127.0.0.1;
            deny               all;
            access_log  logs/cache.log main;
        }

        location /ngx_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        location ~ /test_[0-9].gif {
            empty_gif;
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    server {
        listen       18080;
        server_name  localhost;

        location ^~ /static/ {
            root   html;
            expires  10d;
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    geo $dollar {
        default "$";
    }

    geo $arg_ip $address {
        ranges;
        default no;     # note that ranges precedes all other directives
        .0.0.0-126.255.255.255   abroad|abroad;
        127.0.0.0-223.255.254.255   beijing|cmcc;
    }

    geo $ttlsa_com {
        default 0;
        127.0.0.1 1;
    }

    geo $arg_boy $tao_com {
        default 0;
        127.0.0.1 1;
        8.8.8.8 2;
    }

    geo $arg_boy $tao2_com {
        default 0;
        127.0.0.1/24 24;
        127.0.0.1/32 32;
        8.8.8.8 2;
    }

    server {
        listen 8081;
        server_name localhost;

        location /test {
            set $foo hello;
            echo "foo: $foo";
        }

        location /test1 {
            set $first "hello ";
            echo "${first}world";
        }

        location /foo {
            echo "foo = [$foo]";
        }

        location /bar {
            set $foo 32;
            echo "bar = [$foo]";
        }

        location /test2 {
            echo "This is a dollar sign: $dollar";
        }

        location /iptool {
            default_type text/plain;
            echo $address;
        }

        location /hello {
            default_type text/plain;
            echo $ttlsa_com;
            echo $arg_boy;
        }

        location /hello2 {
            default_type text/plain;
            echo $tao_com;
            echo $arg_boy;
        }

        location /hello3 {
            default_type text/plain;
            echo $tao2_com;
            echo $arg_boy;
        }
    }

    server {
        listen 8082;
        server_name localhost;

        location /foo {
            set $a hello;
            echo_exec /bar;
        }

        location /foo1 {
            set $a hello;
            rewrite ^ /bar;
        }

        location /bar {
            echo "a = [$a]";
        }

        location /test {
            echo "uri = $uri";
            echo "request_uri = $request_uri";
            echo "name: $arg_name";
            echo "class: $arg_class";
            set_unescape_uri $name $arg_name;
            set_unescape_uri $class $arg_class;
            echo "name: $name";
            echo "class: $class";
        }

        location /test2 {
            set $orig_args $args;
            set $args "a=3&b=4";
            echo "original args: $orig_args";
            echo "args: $args";
        }

        location /test3 {
            set $orig_a $arg_a;
            set $args "a=5";
            echo "original a: $orig_a";
            echo "a: $arg_a";
        }

        location /main {
            echo_location /foo2;
            echo_location /bar2;
        }

        location /foo2 {
            echo foo2;
        }

        location /bar2 {
            echo bar2;
        }

        location /main3 {
            set $var main;
            echo_location /foo3;
            echo_location /bar3;
            echo "main: $var";
        }

        location /foo3 {
            set $var foo;
            echo "foo: $var";
        }

        location /bar3 {
            set $var bar;
            echo "bar: $var";
        }

        location /main2 {
            set $var main;
            auth_request /sub;
            echo "main: $var";
        }

        location /sub {
            set $var sub;
            echo "sub: $var";
        }
    }

    server {
        listen 8083;
        server_name localhost;

        location /test {
            set $args "foo=1&bar=2";
            proxy_pass http://127.0.0.1:8084/args;
        }
    }

    server {
        listen 8084;
        server_name localhost;

        location /args {
            echo "args: $args";
        }
    }

    map $http_user_agent $agent {
        ~curl curl;
        ~*chrome chrome;
    }

    server {
        listen       8085;
        server_name  localhost;

        location /hello {
            default_type text/plain;
            echo http_user_agent: $http_user_agent;
            echo agent: $agent;
        }
    }

    map $uri $match {
        ~^/hello/(.*) http://www.ttlsa.com/;
    }

    server {
        listen       8086;
        server_name  localhost;

        location /hello {
            default_type text/plain;
            echo uri: $uri;
            echo match: $match;
            echo capture: $1;
            echo new: $match$1;
        }
    }

    map $args $foo {
        default     0;
        debug       1;
    }

    server {
        listen 8087;
        server_name localhost;

        location /test {
            set $orig_foo $foo;
            set $args debug;
            echo "orginal foo: $orig_foo";
            echo "foo: $foo";
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
